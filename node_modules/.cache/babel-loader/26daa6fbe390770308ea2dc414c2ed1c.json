{"ast":null,"code":"var _jsxFileName = \"/Users/TotiBros/Documents/GitHub/JOBS/src/components/MainSearch.jsx\";\n\n/** @format */\nimport React from \"react\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport JobResult from \"./JobResult\";\nimport uniqid from \"uniqid\";\nimport { Link } from \"react-router-dom\";\nimport { getJobs } from \"../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  getJobs: () => dispatch(getJobs())\n});\n\nexport default class MainSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      jobs: []\n    };\n\n    this.componentDidMount = () => {\n      this.props.getJobs();\n    };\n  }\n\n  // baseEndpoint = 'https://remotive.io/api/remote-jobs?search='\n  // handleChange = (e) => {\n  //     this.setState({ query: e.target.value })\n  // }\n  // handleSubmit = async (e) => {\n  //     e.preventDefault()\n  //     const response = await fetch(this.baseEndpoint + this.state.query)\n  //     if (!response.ok) {\n  //         alert('Error fetching results')\n  //         return\n  //     }\n  //     const { jobs } = await response.json()\n  //     this.setState({ jobs })\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Remote Jobs Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/favourites\",\n            className: \"btn btn-primary\",\n            children: \"Favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"search\",\n              value: this.state.query,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto mb-5\",\n          children: this.state.jobs.map(jobData => /*#__PURE__*/_jsxDEV(JobResult, {\n            data: jobData\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/TotiBros/Documents/GitHub/JOBS/src/components/MainSearch.jsx"],"names":["React","Container","Row","Col","Form","JobResult","uniqid","Link","getJobs","mapStateToProps","state","mapDispatchToProps","dispatch","MainSearch","Component","query","jobs","componentDidMount","props","render","handleSubmit","handleChange","map","jobData"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,iBAA1C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAWA,KAAnC;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCJ,EAAAA,OAAO,EAAE,MAAMI,QAAQ,CAACJ,OAAO,EAAR;AADiB,CAAf,CAA3B;;AAIA,eAAe,MAAMK,UAAN,SAAyBb,KAAK,CAACc,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACtDJ,KADsD,GAC9C;AACNK,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE;AAFA,KAD8C;;AAAA,SAMtDC,iBANsD,GAMlC,MAAM;AACxB,WAAKC,KAAL,CAAWV,OAAX;AACD,KARqD;AAAA;;AAUtD;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEAW,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,aAAT;AAAuB,YAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,SAAS,EAAC,SAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mCACE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAE,KAAKV,KAAL,CAAWK,KAFpB;AAGE,cAAA,QAAQ,EAAE,KAAKM;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAgBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA,oBACG,KAAKX,KAAL,CAAWM,IAAX,CAAgBM,GAAhB,CAAqBC,OAAD,iBACnB,QAAC,SAAD;AAA0B,YAAA,IAAI,EAAEA;AAAhC,aAAgBjB,MAAM,EAAtB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AA3DqD","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport JobResult from \"./JobResult\";\nimport uniqid from \"uniqid\";\nimport { Link } from \"react-router-dom\";\nimport { getJobs } from \"../store/actions\";\n\nconst mapStateToProps = (state) => state;\n\nconst mapDispatchToProps = (dispatch) => ({\n  getJobs: () => dispatch(getJobs()),\n});\n\nexport default class MainSearch extends React.Component {\n  state = {\n    query: \"\",\n    jobs: [],\n  };\n\n  componentDidMount = () => {\n    this.props.getJobs();\n  };\n\n  // baseEndpoint = 'https://remotive.io/api/remote-jobs?search='\n\n  // handleChange = (e) => {\n  //     this.setState({ query: e.target.value })\n  // }\n\n  // handleSubmit = async (e) => {\n  //     e.preventDefault()\n\n  //     const response = await fetch(this.baseEndpoint + this.state.query)\n\n  //     if (!response.ok) {\n  //         alert('Error fetching results')\n  //         return\n  //     }\n\n  //     const { jobs } = await response.json()\n\n  //     this.setState({ jobs })\n\n  // }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs={10} className='mx-auto my-3'>\n            <h1>Remote Jobs Search</h1>\n            <Link to='/favourites' className='btn btn-primary'>\n              Favourites\n            </Link>\n          </Col>\n          <Col xs={10} className='mx-auto'>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Control\n                type='search'\n                value={this.state.query}\n                onChange={this.handleChange}\n              />\n            </Form>\n          </Col>\n          <Col xs={10} className='mx-auto mb-5'>\n            {this.state.jobs.map((jobData) => (\n              <JobResult key={uniqid()} data={jobData} />\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}