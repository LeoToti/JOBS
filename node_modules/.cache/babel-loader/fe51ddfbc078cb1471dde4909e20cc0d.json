{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport mainReducer from './reducers';\nimport fav from '../store/reducers/fav';\nimport jobs from '../store/reducers/jobs';\nimport thunk from 'redux-thunk';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const initialState = {\n  favourites: [],\n  jobs: {\n    jobs: [],\n    error: false,\n    loading: false\n  }\n};\nconst bigReducer = combineReducers({\n  favourites: fav,\n  jobs: jobs\n}); //const configureStore = () => createStore( bigReducer, {}, composeEnhancers(applyMiddleware(thunk)))\n\nexport default createStore(bigReducer, {}, composeEnhancers(applyMiddleware(thunk)));","map":{"version":3,"sources":["/Users/TotiBros/Documents/GitHub/JOBS/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","mainReducer","fav","jobs","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialState","favourites","error","loading","bigReducer"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,eAAvB,EAAwCC,eAAxC,EAAyDC,OAAzD,QAAwE,OAAxE;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAxE;AAQA,OAAO,MAAMQ,YAAY,GAAG;AAExBC,EAAAA,UAAU,EAAE,EAFY;AAGxBN,EAAAA,IAAI,EAAE;AACFA,IAAAA,IAAI,EAAE,EADJ;AAEFO,IAAAA,KAAK,EAAE,KAFL;AAGFC,IAAAA,OAAO,EAAE;AAHP;AAHkB,CAArB;AAcL,MAAMC,UAAU,GAAGd,eAAe,CAAC;AACjCW,EAAAA,UAAU,EAAEP,GADqB;AAEjCC,EAAAA,IAAI,EAAGA;AAF0B,CAAD,CAAlC,C,CAIA;;AAEA,eAAeN,WAAW,CAAEe,UAAF,EAAa,EAAb,EAAiBP,gBAAgB,CAACN,eAAe,CAACK,KAAD,CAAhB,CAAjC,CAA1B","sourcesContent":["import { createStore , combineReducers, applyMiddleware, compose } from 'redux'\nimport mainReducer from './reducers'\nimport fav from '../store/reducers/fav'\nimport jobs from '../store/reducers/jobs'\n\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n\n\n\n\n\n\nexport const initialState = {\n    \n    favourites: [],\n    jobs: {\n        jobs: [],\n        error: false,\n        loading: false,\n      },\n    \n   \n  }\n\n\n\n  const bigReducer = combineReducers({\n    favourites: fav,\n    jobs : jobs, \n  })\n  //const configureStore = () => createStore( bigReducer, {}, composeEnhancers(applyMiddleware(thunk)))\n  \n  export default createStore( bigReducer,{}, composeEnhancers(applyMiddleware(thunk)))"]},"metadata":{},"sourceType":"module"}